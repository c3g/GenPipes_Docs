.. _docs_steps_dnaseq:

.. spelling:word-list::

    Haplotype
    gzipped
    intragenic
    Bruijn
    Somatics
    Bcbio
    homozygous
    cellularity
    hc
    vqsr
    snpId
    snp
    snpeff
    allSamples
    Preprocess
    Mpileup
    GC
    FastQ
    config
    param
    bwa
    picard
    sam   
    BVATools
    vcf
    gvcfs
    recalibrator
    recalibrate
    Omni
    Biomart
    dbNSFP
    dbSNP
    Polyphen
    PhyloP
    transversion
    gz
    nb
    varfilter
    snpAndIndelBCF
    covarying
    bcf
    Mappability
    translocations
    bgzipped
    vcfs
    indv
    missingness
    idepth
    readgroups
    imiss
    CNV
    CNVKit

.. _GATK SAM to FastQ:

**GATK SAM to FastQ**

Convert SAM/BAM files from the input readset file into FASTQ format if FASTQ files are not already specified in the readset file. Do nothing otherwise.

.. _Trim FastP:

**Trim FastP**

`FastP`_: A tool designed to provide fast all-in-one preprocessing for FastQ files. This tool is developed in C++ with multi-threading supported to afford high performance.

.. _BWA Mem2 SAMTools Sort:

**BWA Mem2 SAMTools Sort**

The filtered reads are aligned to a reference genome. The alignment is done per sequencing readset. The alignment software used is `BWA-MEM2`_ with algorithm: bwa mem2. BWA output BAM files are then sorted by coordinate using `SAMTools`_ This step takes as input files:

* Trimmed FASTQ files if available
* Else, FASTQ files from the readset file if available
* Else, FASTQ output files from previous picard_sam_to_fastq conversion of BAM files

.. _GATK Mark Duplicates:

**GATK Mark Duplicates**

This step marks duplicates. Aligned reads per sample are duplicates if they have the same 5' alignment positions (for both mates in the case of paired-end reads). All but the best pair (based on alignment score) will be marked as a duplicate in the BAM file. Marking duplicates is done using `GATK`_.

.. _Set Interval List:

**Set Interval List**

Create an interval list with ScatterIntervalsByNs from `GATK`_: GATK. 

Used for creating a broken-up interval list that can be used for scattering a variant-calling pipeline in a way that will not cause problems at the edges of the intervals. By using large enough N blocks (so that the tools will not be able to anchor on both sides) we can be assured that the results of scattering and gathering the variants with the resulting interval list will be the same as calling with one large region.

.. _GATK Haplotype Caller:

**GATK Haplotype Caller**

GATK Haplotype Caller is used for SNPs and small indels.

.. _Merge and call individual GVCF:

**Merge and call individual GVCF**

Merges the gvcfs of haplotype caller and also generates a per sample vcf containing genotypes.

.. _Combine GVCF:

**Combine GVCF**

Combine the per sample gvcfs of haplotype caller into one main file for all sample.

.. _Merge and call combined GVCF:

**Merge and call combined GVCF**

Merges the combined gvcfs and also generates a general vcf containing genotypes.

.. _Variant Recalibrator:

**Variant Recalibrator**

This step involves GATK variant recalibrator. The purpose of the variant recalibrator is to assign a well-calibrated probability to each variant call in a call set. You can then create highly accurate call sets by filtering based on this single estimate for the accuracy of each call. The approach taken by variant quality score recalibration is to develop a continuous, covarying estimate of the relationship between SNP call annotations (QD, MQ, HaplotypeScore, and ReadPosRankSum, for example) and the probability that a SNP is a true genetic variant versus a sequencing or data processing artifact. This model is determined adaptively based on "true sites" provided as input, typically HapMap 3 sites and those sites found to be polymorphic on the Omni 2.5M SNP chip array. This adaptive error model can then be applied to both known and novel variation discovered in the call set of interest to evaluate the probability that each call is real. The score that gets added to the INFO field of each variant is called the VQSLOD. It is the log odds ratio of being a true variant versus being false under the trained Gaussian mixture model. Using the tranche file generated by the previous step the ApplyRecalibration walker looks at each variant's VQSLOD value and decides which tranche it falls in. Variants in tranches that fall below the specified truth sensitivity filter level have their filter field annotated with its tranche level. This will result in a call set that simultaneously is filtered to the desired level but also has the information necessary to pull out more variants for a higher sensitivity but a slightly lower quality level.

.. _Haplotype caller decompose and normalize:

**Haplotype caller decompose and normalize**

Performs decompose/normalization for variant comparison at the haplotype level. Replay the variants from the VCF into the reference and determine whether variants match by whether the resulting Haplotype match.

.. _Haplotype caller flag mappability:

**Haplotype caller flag mappability**

Mappability annotation applied to haplotype caller vcf. An in-house database identifies regions in which reads are confidently mapped to the reference genome.

.. _Haplotype caller SNP ID annotation:

**Haplotype caller SNP ID annotation**

dbSNP annotation applied to haplotype caller vcf. The .vcf files are annotated for dbSNP using the software SnpSift (from the `SNPEff Suite`_).

.. _Haplotype caller SNP Effect:

**Haplotype caller SNP Effect**

Variant effect annotation applied to haplotype caller vcf. The .vcf files are annotated for variant effects using the `SNPEff Suite`_ software. SnpEff annotates and predicts the effects of variants on genes (such as amino acid changes).

.. _Haplotype caller dbNSFP annotation:

**Haplotype caller dbNSFP annotation**

Additional SVN annotations applied to haplotype caller vcf. Provides extra information about SVN by using numerous published databases. Applicable to human samples. Databases available include Biomart (adds GO annotations based on gene information) and dbNSFP (an integrated database of functional annotations from multiple sources for the comprehensive collection of human non-synonymous SNPs. It compiles prediction scores from four prediction algorithms (SIFT, Polyphen2, LRT and MutationTaster), three conservation scores (PhyloP, GERP++ and SiPhy) and other function annotations).

.. _Haplotype caller Gemini annotation:

**Haplotype caller Gemini annotation**

Uses `Haplotype caller <https://gatk.broadinstitute.org/hc/en-us/articles/360042913231-HaplotypeCaller>`_ to call germline SNPs and indels via local re-assembly of Haplotype for exploring genetic variations using the `Gemini annotations`_. 

.. _Metrics DNA Picard:

**Metrics DNA Picard**

This step generates metrics with picard, including `CollectMultipleMetrics <https://gatk.broadinstitute.org/hc/en-us/articles/360037594031-CollectMultipleMetrics-Picard->`_, `CollectOxoGMetrics <https://gatk.broadinstitute.org/hc/en-us/articles/360037428231-CollectOxoGMetrics-Picard->`_, `CollectGcBiasMetrics <https://gatk.broadinstitute.org/hc/en-us/articles/360036481572-CollectGcBiasMetrics-Picard->`_, `CollectWgsMetrics <https://gatk.broadinstitute.org/hc/en-us/articles/360037594031-CollectWgsMetrics-Picard->`_, `CollectHsMetrics <https://gatk.broadinstitute.org/hc/en-us/articles/360037594031-CollectHsMetrics-Picard->`_, `CollectInsertSizeMetrics <https://gatk.broadinstitute.org/hc/en-us/articles/360037594031-CollectInsertSizeMetrics-Picard->`_, `CollectSequencingArtifactMetrics <https://gatk.broadinstitute.org/hc/en-us/articles/360037594031-CollectSequencingArtifactMetrics-Picard->`_, `CollectQualityYieldMetrics <https://gatk.broadinstitute.org/hc/en-us/articles/360037594031-CollectQualityYieldMetrics-Picard->`_, `CollectQualityByCycle <https://gatk.broadinstitute.org/hc/en-us/articles/360037594031-CollectQualityByCycle-Picard->`_, and  `CollectBaseDistributionByCycle <https://gatk.broadinstitute.org/hc/en-us/articles/360037594031-CollectBaseDistributionByCycle-Picard->`_.

.. _DNA Sample MosDepth Metrics:

**DNA Sample MosDepth Metrics**

Calculate depth stats for captured regions with `Mosdepth`_.

.. _Picard Calculate HS Metrics:

**Picard Calculate HS Metrics**

Compute on target percent of hybridization based capture happens in this step.

.. _Metrics Verify BAM ID:

**Metrics Verify BAM ID**

In this step, `VerifyBAMID <https://genome.sph.umich.edu/wiki/VerifyBamID>`_ software is used to verify whether the reads in particular file match previously known genotypes for an individual (or group of individuals), and checks whether the reads are contaminated as a mixture of two samples. 

.. _Run MultiQC:

**Run MultiQC**

Aggregate results from bioinformatics analyses across many samples into a single report. `MultiQC`_ searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarizing the output from numerous bioinformatics tools.

.. _Report Djerba:

**Report Djerba**

This step generates the `Djerba <https://github.com/oicr-gsi/djerba>` report for the analysis.

.. _Sym Link FastQ:

**Sym Link FastQ**

Automated symbolic linking of FASTQ files.

.. _Sym Link Final BAM:

**Sym Link Final BAM**

Creates symbolic links of final BAM for delivery of data to the clients.

.. _Metrics VCFTools Missing Individual:

**Metrics VCFTools Missing Individual**

This step uses `VCFtools <https://vcftools.github.io/index.html>`_ and --missing_indv option to generate a file reporting the `missingness` factor in the analysis on a per-individual basis. It takes bgzipped .vcf file as input and creates .imiss flat file indicating missingness.

.. _Metrics VCFTools Depth Individual:

**Metrics VCFTools Depth Individual**

This step uses `VCFtools <https://vcftools.github.io/index.html>`_ and --depth option to generate a file containing the mean depth per individual. It takes as input bgzipped .vcf file and creates a .idepth flat file.

.. _Metrics GATK Sample Fingerprint:

**Metrics GATK Sample Fingerprint**

`CrosscheckFingerprints (Picard) <https://gatk.broadinstitute.org/hc/en-us/articles/360040098592-CrosscheckFingerprints-Picard->`_ functionality in GATK toolkit is used to cross-check readgroups, libraries, samples, or files to determine if all data in the set of input files appears to come from the same individual. In this step, sample SAM/BAM or VCF file is taken as input and a fingerprint file is generated using CrosscheckFingerprints (Picard) in GATK. It checks the sample identity of the sequence/genotype data in the provided file (SAM/BAM or VCF) against a set of known genotypes in the supplied genotype file (in VCF format).

.. _Metrics GATK Cluster Fingerprint:

**Metrics GATK Cluster Fingerprint**

In this step, ClusterCrosscheckMetrics function from GATK is used as a follow-up step to running CrosscheckFingerprints created in the `Metrics GATK Sample Fingerprint`_ step earlier. There are cases where one would like to identify a few groups out of a collection of many possible groups (say to link a bam to it's correct sample in a multi-sample vcf. In this step, sample SAM/BAM or VCF file is taken as input and a fingerprint file is generated.

.. _Delly2 Call Filter:

**Delly2 Call Filter**

This step uses normal and tumor final BAMs as input and generates a binary variant call format (BCF) file as output. It utilizes `Delly2`_, an integrated structural variant (SV) prediction method that can discover genotype and visualize deletions, tandem duplications, inversions and translocations at single-nucleotide resolution in short-read massively parallel sequencing data. It uses paired-ends, split-reads and read-depth to sensitively and accurately delineate genomic rearrangements throughout the genome. Structural variants can be annotated using `Delly-sansa`_ and visualized using `Delly-maze`_ or `Delly-suave`_.

.. _Delly2 SV Annotation:

**Delly2 SV Annotation**

SV Annotation step utilizes the BCF file generated in previous `Delly2 Call Filter`_ step and performs genome annotation at various levels. At the nucleotid level it tries to identify the physical location of the SV dna sequences. Next, at the protein level the annotation process tries to determine the possible functions of the SV genes. Lastly, at the process-level annotation, it tries to identify the pathways and processes in which different SV genes interact, assembling an efficient functional annotation. For more details on annotation see `Genome Annotations`_. 

.. _Germline Manta:

**Germline Manta**

Manta calls structural variants (SVs) and indels from mapped paired-end sequencing reads. It is optimized for analysis of germline variation in small sets of individuals and somatic variation in tumor/normal sample pairs. Manta discovers, assembles and scores large-scale SVs, medium-sized indels and large insertions within a single efficient workflow. Manta accepts input read mappings from BAM or CRAM files and reports all SV and indel inferences in VCF 4.1 format.

.. _Manta SV Annotation:

** Manta SV Annotation**

This step uses the VCF file generated in previous step and performs SV annotations to compares types and breakpoints for candidate SVs from different callsets and enables fast comparison of SVs to genomic features such as genes and repetitive regions, as well as to previously established SV datasets.

.. _Lumpy Paired SV:

**Lumpy Paired SV**

This step uses `Lumpy`_ for structural variant discovery in the given input file. The output is available in BAM format.

Comprehensive discovery of structural variation (SV) from whole genome sequencing data requires multiple detection signals including read-pair, split-read, read-depth and prior knowledge. Owing to technical challenges, extant SV discovery algorithms either use one signal in isolation, or at best use two sequentially. Lumpy is a novel SV discovery framework that naturally integrates multiple SV signals jointly across multiple samples. It yields improved sensitivity, especially when SV signal is reduced owing to either low coverage data or low intra-sample variant allele frequency.

.. _Lumpy SV Annotation:

**Lumpy SV Annotation**

This step performs LumPy SV Annotation for mapping and characterization of SVs.

.. _Wham SV Call:

**Wham SV Call**

`Wham`_ (Whole-genome Alignment Metrics) provides a single, integrated framework for both structural variant calling and association testing, thereby bypassing many of the difficulties that currently frustrate attempts to employ SVs in association testing.  This step returns a VCF file.

.. _Wham SV Annotation:

**Wham SV Annotation**

This step uses the VCF file generated in the previous step `Wham SV Call`_ and performs SV annotations. 

.. _CNVkit Batch:

**CNVkit Batch**

A copy number variation (`CNV`_) is when the number of copies of a particular gene varies from one individual to the next. Copy-number variation (CNV) is a large category of structural variation, which includes insertions, deletions and duplications. For copy number variation analysis, GenPipes DNA Sequencing pipeline (-t sv option) uses CNVkit that allows for CNV calling on single samples (e.g., tumor samples). 

CNVkit provides an advantageous way to run the entire pipeline using the batch option to run various stages in copy number calling pipeline such as:

* Create target/anti-target bed files
* Gather read depths for those regions
* Compile a copy number reference
* Correct biases in tumor samples while calculating copy ratios
* Mark copy number segments

.. _CNVkit SV Annotation:

**CNVkit SV Annotation**

This step performs CNVkit SV annotation.

.. _Run BreakSeq2:

**Run BreakSeq2**

In this step, `BreakSeq2`_ is used to combine DNA double-strand breaks (DSBs) labeling with next generation sequencing (NGS) to map chromosome breaks with improved sensitivity and resolution. It is an ultra fast and accurate nucleotide-resolution analysis of structural variants.

.. _Ensemble MetaSV:

**Ensemble MetaSV**

`MetaSV`_ uses highly effective ensemble approach for calling SVs. It is an integrated SV caller which leverages multiple orthogonal SV signals for high accuracy and resolution. MetaSV proceeds by merging SVs from multiple tools for all types of SVs. It also analyzes soft-clipped reads from alignment to detect insertions accurately since existing tools underestimate insertion SVs. Local assembly in combination with dynamic programming is used to improve breakpoint resolution. Paired-end and coverage information is used to predict SV genotypes.

.. _MetaSV Annotation:

**MetaSV Annotation**

This step uses output from previous step and performs SV annotations.

.. _SAMTools Merge Files:

**SAMTools Merge Files**

BAM readset files are merged into one file per sample. Merge is done using `SAMTools`_.
This step takes as input files:

* Aligned and sorted BAM output files from previous bwa_mem_picard_sort_sam step if available
* Else, BAM files from the readset file

.. _GATK Fixmate:

**GATK Fixmate**

Verify mate-pair information between mates and fix if needed. This ensures that all mate-pair information is in sync between each read and its mate pair. Fix is done using `Picard`_.

.. _Germline Varscan2:

**Germline Varscan2**

This step uses `VarScan`_ caller for insertions and deletions.

.. _Preprocess VCF:

**Preprocess VCF**

Preprocess VCF for loading into an annotation database - `Gemini`_. Processes include normalization and decomposition of MNPs by `Vt`_ and VCF format modification for correct loading into Gemini.

.. _SNP Effect:

**SNP Effect**

Variant effect annotation. The .vcf files are annotated for variant effects using the SnpEff software. SnpEff annotates and predicts the effects of variants on genes (such as amino acid changes). 

Arguments: 

*input_file (str)* 

The input vcf file to annotate for variant effects. Default is allSamples.hc.vqsr.vt.mil.snpId.vcf.gz. 

*output (str)*

The output vcf file. Default is allSamples.hc.vqsr.vt.mil.snpId.snpeff.vcf. job_name (str): The name of the job. Default is snp_effect.hc.

.. _Split Tumor Only:

**Split Tumor Only**

Splits the merged VCF produced in previous steps to generate a report on a per-patient basis. The merged VCF is split using the BCFTools split function with the removal of homozygous reference calls. Creates one VCF per patient to be used for downstream reporting.

.. _Filter Tumor Only:

**Filter Tumor Only**

Applies custom script to inject FORMAT information - tumor/normal DP and VAP into the INFO field the filter on those generated fields.

.. _Report CPSR:

**Report CPSR**

Creates a `CPSR Germline Report`_ where input is the filtered ensemble germline vcf and output is the html report and additional flat files.

.. _Report PCGR:

**Report PCGR**

Creates a `PCGR Somatic Germline Report`_ where input is the filtered ensemble germline vcf and the output is the html report and additional flat files.

.. _Sequenza Step:

**Sequenza Step**

`Sequenza`_ is a novel set of tools providing a fast python script to genotype cancer samples, and an R package to estimate cancer cellularity, ploidy, genome wide copy number profile and infer for mutated alleles.

.. _Raw Mpileup:

**Raw Mpileup**

Full pileup (optional). A raw Mpileup file is created using samtools Mpileup and compressed in gzipped format. One packaged Mpileup file is created per sample/chromosome.

.. _Paired Var Scan 2:

**Paired Var Scan 2**

Variant calling and somatic mutation/CNV detection for next-generation sequencing data. Uses `VarScan 2`_ for Somatic mutation and copy number alteration discovery in cancer by exome sequencing `VarScan 2`_ thresholds based on `DREAM3 results`_ generated by SC INFO field remove to prevent collision with Samtools output during ensemble.

.. _Merge Var Scan 2:

**Merge Var Scan 2**

Merge Mpileup files per sample/chromosome into one compressed gzip file per sample.

.. _Filter Germline:

**Filter Germline**

Applies custom script to inject FORMAT information - tumor/normal DP and VAP into the INFO field the filter on those generated fields.

.. _Filter Somatic:

**Filter Somatic**

Applies custom script to inject FORMAT information - tumor/normal DP and VAP into the INFO field the filter on those generated fields.

.. _Conpair Concordance Contamination:

**Conpair Concorance Contamination**

`Conpair <https://github.com/nygenome/Conpair>`_ is a concordance and contamination estimator for tumor–normal pairs. This step is a quality control process to ensure the normal sample and cancer sample come from the same patient. It estimates this by determining the amount of normal sample in the tumor and the amount of tumor in normal sample.

.. _Sym Link Report:

**Sym Link Report**

Generates symbolic links for Tumor Pair pipeline report.

.. _Sym Link FASTQ Pair:

**Sym Link FASTQ Pair**

Generates symbolic links for FASTQ Pair output files.

.. _Sym Link Panel:

**Sym Link Panel**

This step create symbolic links of panel variants for generating reports and deliverable to the clients.

.. _Sym Link Ensemble:

**Sym Link Ensemble**

Generates symbolic links for Ensemble processing output.

.. _Manta SV Calls:

**Manta SV Calls**

`Manta`_ calls structural variants (SVs) and indels from mapped paired-end sequencing reads. It is optimized for analysis of germline variation in small sets of individuals and somatic variation in tumor/normal sample pairs.  Manta discovers, assembles and scores large-scale SVs, medium-sized indels and large insertions within a single efficient workflow.

Manta accepts input read mappings from BAM or CRAM files and reports all SV and indel inferences in VCF 4.1 format

.. _Strelka2 Paired Somatic:

**Strelka2 Paired Somatic**

`Strelka2`_ is a fast and accurate small variant caller optimized for analysis of germline variation in small cohorts and somatic variation in tumor/normal sample pairs This implementation is optimized for somatic calling.

.. _Strelka2 Paired Germline:

**Strelka2 Paired Germline**

`Strelka2`_ is a fast and accurate small variant caller optimized for analysis of germline variation in small cohorts and somatic variation in tumor/normal sample pairs This implementation is optimized for germline calling in cancer pairs.

.. _Strelka2 Paired SnpEff:

**Strelka2 Paired SnpEff**

`Strelka2`_ is a fast and accurate small variant caller optimized for analysis of germline variation in small cohorts and somatic variation in tumor/normal sample pairs This implementation is optimized for germline calling in cancer pairs.

.. _Purple Ploidy Estimator:

**Purple Ploidy Estimator**

`Purple`_ is a purity ploidy estimator for whole genome sequenced (WGS) data. It combines B-allele frequency (BAF) from `AMBER`_, read depth ratios from `COBALT`_, somatic variants and structural variants to estimate the purity and copy number profile of a tumor sample.

.. _Purple SV:

**Purple SV**

Runs PURPLE with the optional structural variant input VCFs. PURPLE is a purity ploidy estimator for whole genome sequenced (WGS) data.

It combines B-allele frequency (BAF) from AMBER, read depth ratios from COBALT, somatic variants and structural variants to estimate the purity and copy number profile of a tumor sample.

.. _Paired Mutect2:

**Paired Mutect2**

`GATK Mutect2 Overview`_ caller for SNVs and Indels.

.. _Merge Mutect2:

**Merge Mutect2**

Merge SNVs and indels for `GATK MuTect2 Overview`_ Replace TUMOR and NORMAL sample names in VCF to the exact tumor/normal sample names Generate a somatic VCF containing only PASS variants

.. _VarDict Paired:

**VarDict Paired**

In this step, `VarDict`_ caller is used for SNVs and Indels. Note: variants are filtered to remove instance where REF == ALT and REF modified to 'N' when REF is AUPAC nomenclature

.. _Merge Filter Paired VarDict:

**Merge Filter Paired VarDict**

The fully merged VCF is filtered using following steps: 

#. Retain only variants designated as somatic by VarDict: either StrongSomatic or LikelySomatic 
#. Somatics identified in step 1 must have PASS filter.

.. _Ensemble Somatic:

**Ensemble Somatic**

Apply `Bcbio.variations`_ ensemble approach for `GATK MuTect2 Overview`_, `VarDict`_, Samtools and `VarScan 2`_ calls Filter ensemble calls to retain only calls overlapping 2 or more callers

.. _GATK Variant Annotator Somatic:

**GATK Variant Annotator Somatic**

Add VCF annotations to ensemble VCF: Standard and Somatic annotations.

.. _Merge GATK Variant Annotator Somatic:

**Merge GATK Variant Annotator Somatic**

Merge annotated somatic VCFs.

.. _Ensemble Germline Loh:

**Ensemble Germline Loh**

This step applies Bcbio.variations ensemble approach for `VarDict`_, Samtools and `VarScan 2`_ calls. It also filters ensemble calls to retain only calls overlapping 2 or more callers.

.. _GATK Variant Annotator Germline:

**GATK Variant Annotator Germline**

Add VCF annotations to ensemble VCF: most importantly the AD field.

.. _Merge GATK Variant Annotator Germline:

**Merge GATK Variant Annotator Germline**

Merge annotated germline and LOH VCFs.

.. _GRIDSS Paired Somatic:

**GRIDSS Paired Somatic**

`GRIDSS <https://github.com/PapenfussLab/gridss>`_ is a module software suite containing tools useful for the detection of genomic rearrangements. GRIDSS includes a genome-wide break-end assembler, as well as a structural variation caller for Illumina sequencing data. GRIDSS calls variants based on alignment-guided positional de Bruijn graph genome-wide break-end assembly, split read, and read pair evidence.

.. _Linx Annotations Somatic:

**Linx Annotations Somatic**

The `LINX`_ algorithm classifies somatic structural variation in tumors. It is an annotation, interpretation and visualization tool for structural variants. The primary function is grouping together individual SV calls into distinct events and properly classify and annotating the event to understand both its mechanism and genomic impact.

LINX helps in the interpretation of structural variant and copy number data derived from short-read, whole-genome sequencing. It classifies raw structural variant calls into distinct events and predicts their effect on the local structure of the derivative chromosome and the functional impact on affected genes. Visualizations facilitate further investigation of complex rearrangements. LINX allows insights into a diverse range of structural variation events and can reliably detect pathogenic rearrangements, including gene fusions, immunoglobulin enhancer rearrangements, intragenic deletions, and duplications. 

.. _Linx Annotations Germline:

**Linx Annotations Germline**

Though `LINX`_ is designed primarily for somatic SV, it can also be run in a more limited germline mode to annotate and interpret germline rearrangements

.. _Linx Plot:

**Linx Plot**

`LINX`_ Plot offers visualization methods that provide insight into complex genomic rearrangements. It leverages the integrated structural variant and copy number calling to cluster individual structural variants into higher order events and chains them together to predict local derivative chromosome structure.

.. include:: steps_cram_op.inc

.. Following are the html link references:

.. _FastP: https://github.com/OpenGene/fastp
.. _BWA-MEM2: https://github.com/bwa-mem2/bwa-mem2
.. _SAMTools: https://www.htslib.org/doc/samtools.html
.. _GATK: https://gatk.broadinstitute.org/hc/en-us
.. _GATK Variant Recalibrator: https://gatk.broadinstitute.org/hc/en-us/articles/360036510892-VariantRecalibrator
.. _Mosdepth: https://github.com/brentp/mosdepth
.. _Picard: http://broadinstitute.github.io/picard/
.. _Varscan:  https://dkoboldt.github.io/varscan/
.. _Trimmomatic: http://www.usadellab.org/cms/index.php?page=trimmomatic
.. _GATK Software: https://gatk.broadinstitute.org/hc/en-us
.. _BVATools: https://bitbucket.org/mugqic/bvatools/src/master/
.. _SNPEff Suite: http://snpeff.sourceforge.net
.. _Delly2: https://github.com/dellytools/delly
.. _Delly-sansa: https://github.com/dellytools/sansa
.. _Delly-maze: https://github.com/dellytools/maze
.. _Delly-suave: https://github.com/dellytools/suave
.. _Genome Annotations: https://www.ncbi.nlm.nih.gov/books/NBK20253/
.. _Manta: https://github.com/Illumina/manta
.. _Lumpy: https://genomebiology.biomedcentral.com/articles/10.1186/gb-2014-15-6-r84
.. _Wham: https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004572
.. _CNV: https://www.genome.gov/genetics-glossary/Copy-Number-Variation
.. _BreakSeq2: http://bioinform.github.io/breakseq2/
.. _Gemini annotations: https://gemini.readthedocs.io
.. _CPSR Germline Report: https://sigven.github.io/cpsr/
.. _PCGR Somatic Germline Report: https://sigven.github.io/pcgr/
.. _Sambamba: http://lomereiter.github.io/sambamba/index.html
.. _BWA alignment software: http://bio-bwa.sourceforge.net/
.. _Picard: http://broadinstitute.github.io/picard/
.. _Picard Metric Definition Tools: https://broadinstitute.github.io/picard/picard-metric-definitions.html
.. _Qualimap: http://qualimap.conesalab.org/
.. _FastQC: https://www.bioinformatics.babraham.ac.uk/projects/fastqc/
.. _AMBER: https://github.com/hartwigmedical/hmftools/blob/master/amber/README.md
.. _COBALT: https://github.com/hartwigmedical/hmftools/tree/master/cobalt
.. _dbNSFP: https://sites.google.com/site/jpopgen/dbNSFP
.. _SIFT: https://sift.bii.a-star.edu.sg
.. _Polyphen2: http://genetics.bwh.harvard.edu/pph2/
.. _MutationTaster: https://www.mutationtaster.org
.. _Siphy: http://portals.broadinstitute.org/genome_bio/siphy/index.html
.. _GERP++: https://bio.tools/gerp
.. _PhyloP: https://ionreporter.thermofisher.com/ionreporter/help/GUID-03D1F68A-E646-4B49-AD59-AF2F51874BD2.html
.. _SamBamba: http://lomereiter.github.io/sambamba/index.html
.. _Vt: https://genome.sph.umich.edu/wiki/Vt
.. _Gemini: http://gemini.readthedocs.org/en/latest/index.html
.. _DREAM3 results: https://github.com/dkoboldt/varscan/releases
.. _GATK MuTect2 Overview: https://gatk.broadinstitute.org/hc/en-us/articles/360037593851-Mutect2 
.. _bcftools: http://www.htslib.org/doc/bcftools.html
.. _loh: https://www.cancer.gov/publications/dictionaries/genetics-dictionary/def/loh
.. _germline: https://www.cancer.gov/publications/dictionaries/genetics-dictionary/def/germline-variant 
.. _somatic: https://www.cancer.gov/publications/dictionaries/genetics-dictionary/def/somatic-variant
.. _Bcbio.variations: https://github.com/chapmanb/bcbio.variation
.. _VarDict: https://www.ncbi.nlm.nih.gov/pubmed/27060149
.. _CNVKit: https://cnvkit.readthedocs.io/en/stable/
.. _CNVKit batch command: https://cnvkit.readthedocs.io/en/stable/pipeline.html#batch
.. _BVATools: https://bitbucket.org/mugqic/bvatools/src/master/
.. _SCONE: https://www.bioconductor.org/packages/devel/bioc/vignettes/scone/inst/doc/sconeTutorial.html
.. _SCONE is tool: https://github.com/YosefLab/scone
.. _SvABA tool: https://github.com/walaj/svaba/blob/master/README.md
.. _SvABA: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5880247/
.. _MetaSV: http://bioinform.github.io/metasv/
.. _MetaSV Tool: https://github.com/bioinform/metasv
.. _logR Signal: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6778654/
.. _Biomart: https://m.ensembl.org/info/data/biomart/index.html
.. _LINX: https://github.com/hartwigmedical/hmftools/blob/master/linx/README.md
